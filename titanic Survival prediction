{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "eb27016d",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:34.667393Z",
     "iopub.status.busy": "2024-07-04T06:51:34.666995Z",
     "iopub.status.idle": "2024-07-04T06:51:35.597692Z",
     "shell.execute_reply": "2024-07-04T06:51:35.596582Z"
    },
    "papermill": {
     "duration": 0.940651,
     "end_time": "2024-07-04T06:51:35.600675",
     "exception": false,
     "start_time": "2024-07-04T06:51:34.660024",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/test-file/tested.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e0c1a1c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:35.612295Z",
     "iopub.status.busy": "2024-07-04T06:51:35.611789Z",
     "iopub.status.idle": "2024-07-04T06:51:38.105196Z",
     "shell.execute_reply": "2024-07-04T06:51:38.103977Z"
    },
    "papermill": {
     "duration": 2.502284,
     "end_time": "2024-07-04T06:51:38.108052",
     "exception": false,
     "start_time": "2024-07-04T06:51:35.605768",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import plotly.express as px\n",
    "import plotly\n",
    "import plotly.offline as pyo\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from imblearn.over_sampling import SMOTE\n",
    "from sklearn.model_selection import train_test_split,cross_val_score\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\n",
    "\n",
    "from sklearn.metrics import classification_report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6157c5da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:38.123171Z",
     "iopub.status.busy": "2024-07-04T06:51:38.121483Z",
     "iopub.status.idle": "2024-07-04T06:51:38.151253Z",
     "shell.execute_reply": "2024-07-04T06:51:38.150030Z"
    },
    "papermill": {
     "duration": 0.04017,
     "end_time": "2024-07-04T06:51:38.154267",
     "exception": false,
     "start_time": "2024-07-04T06:51:38.114097",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "titanic=pd.read_csv('/kaggle/input/test-file/tested.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "08b7d486",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:38.166270Z",
     "iopub.status.busy": "2024-07-04T06:51:38.165776Z",
     "iopub.status.idle": "2024-07-04T06:51:38.175331Z",
     "shell.execute_reply": "2024-07-04T06:51:38.174021Z"
    },
    "papermill": {
     "duration": 0.018829,
     "end_time": "2024-07-04T06:51:38.178112",
     "exception": false,
     "start_time": "2024-07-04T06:51:38.159283",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(418, 12)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e26cc44d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:38.191337Z",
     "iopub.status.busy": "2024-07-04T06:51:38.190409Z",
     "iopub.status.idle": "2024-07-04T06:51:38.225677Z",
     "shell.execute_reply": "2024-07-04T06:51:38.224489Z"
    },
    "papermill": {
     "duration": 0.045367,
     "end_time": "2024-07-04T06:51:38.228721",
     "exception": false,
     "start_time": "2024-07-04T06:51:38.183354",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>991</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Nancarrow, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>33.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A./5. 3338</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>1069</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Stengel, Mr. Charles Emil Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>54.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>11778</td>\n",
       "      <td>55.4417</td>\n",
       "      <td>C116</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193</th>\n",
       "      <td>1085</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Lingane, Mr. John</td>\n",
       "      <td>male</td>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>235509</td>\n",
       "      <td>12.3500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>1126</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mr. John Bradley</td>\n",
       "      <td>male</td>\n",
       "      <td>39.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>1090</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Baimbrigge, Mr. Charles Robert</td>\n",
       "      <td>male</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C.A. 31030</td>\n",
       "      <td>10.5000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>410</th>\n",
       "      <td>1302</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Naughton, Miss. Hannah</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>365237</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>913</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Olsen, Master. Artur Karl</td>\n",
       "      <td>male</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>C 17368</td>\n",
       "      <td>3.1708</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>1124</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Wiklund, Mr. Karl Johan</td>\n",
       "      <td>male</td>\n",
       "      <td>21.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3101266</td>\n",
       "      <td>6.4958</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>1136</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Master. William Arthur Willie\"\"</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>W./C. 6607</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>937</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Peltomaki, Mr. Nikolai Johannes</td>\n",
       "      <td>male</td>\n",
       "      <td>25.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O 2. 3101291</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass                                       Name  \\\n",
       "99           991         0       3               Nancarrow, Mr. William Henry   \n",
       "177         1069         0       1            Stengel, Mr. Charles Emil Henry   \n",
       "193         1085         0       2                          Lingane, Mr. John   \n",
       "234         1126         0       1                  Cumings, Mr. John Bradley   \n",
       "198         1090         0       2             Baimbrigge, Mr. Charles Robert   \n",
       "410         1302         1       3                     Naughton, Miss. Hannah   \n",
       "21           913         0       3                  Olsen, Master. Artur Karl   \n",
       "232         1124         0       3                    Wiklund, Mr. Karl Johan   \n",
       "244         1136         0       3  Johnston, Master. William Arthur Willie\"\"   \n",
       "45           937         0       3            Peltomaki, Mr. Nikolai Johannes   \n",
       "\n",
       "        Sex   Age  SibSp  Parch             Ticket     Fare Cabin Embarked  \n",
       "99     male  33.0      0      0         A./5. 3338   8.0500   NaN        S  \n",
       "177    male  54.0      1      0              11778  55.4417  C116        C  \n",
       "193    male  61.0      0      0             235509  12.3500   NaN        Q  \n",
       "234    male  39.0      1      0           PC 17599  71.2833   C85        C  \n",
       "198    male  23.0      0      0         C.A. 31030  10.5000   NaN        S  \n",
       "410  female   NaN      0      0             365237   7.7500   NaN        Q  \n",
       "21     male   9.0      0      1            C 17368   3.1708   NaN        S  \n",
       "232    male  21.0      1      0            3101266   6.4958   NaN        S  \n",
       "244    male   NaN      1      2         W./C. 6607  23.4500   NaN        S  \n",
       "45     male  25.0      0      0  STON/O 2. 3101291   7.9250   NaN        S  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic.sample(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b83fb766",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:38.246200Z",
     "iopub.status.busy": "2024-07-04T06:51:38.245789Z",
     "iopub.status.idle": "2024-07-04T06:51:38.277512Z",
     "shell.execute_reply": "2024-07-04T06:51:38.275937Z"
    },
    "papermill": {
     "duration": 0.043607,
     "end_time": "2024-07-04T06:51:38.280341",
     "exception": false,
     "start_time": "2024-07-04T06:51:38.236734",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n",
      "       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n",
      "      dtype='object') /n/n/n/n\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 418 entries, 0 to 417\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  418 non-null    int64  \n",
      " 1   Survived     418 non-null    int64  \n",
      " 2   Pclass       418 non-null    int64  \n",
      " 3   Name         418 non-null    object \n",
      " 4   Sex          418 non-null    object \n",
      " 5   Age          332 non-null    float64\n",
      " 6   SibSp        418 non-null    int64  \n",
      " 7   Parch        418 non-null    int64  \n",
      " 8   Ticket       418 non-null    object \n",
      " 9   Fare         417 non-null    float64\n",
      " 10  Cabin        91 non-null     object \n",
      " 11  Embarked     418 non-null    object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 39.3+ KB\n"
     ]
    }
   ],
   "source": [
    "print (titanic.columns,'/n/n/n/n')\n",
    "titanic.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fde99b5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:38.293207Z",
     "iopub.status.busy": "2024-07-04T06:51:38.292823Z",
     "iopub.status.idle": "2024-07-04T06:51:38.312424Z",
     "shell.execute_reply": "2024-07-04T06:51:38.310304Z"
    },
    "papermill": {
     "duration": 0.029329,
     "end_time": "2024-07-04T06:51:38.315228",
     "exception": false,
     "start_time": "2024-07-04T06:51:38.285899",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>892</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Kelly, Mr. James</td>\n",
       "      <td>male</td>\n",
       "      <td>34.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>330911</td>\n",
       "      <td>7.8292</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>893</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
       "      <td>female</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>363272</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>894</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Myles, Mr. Thomas Francis</td>\n",
       "      <td>male</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>240276</td>\n",
       "      <td>9.6875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>895</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Wirz, Mr. Albert</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>315154</td>\n",
       "      <td>8.6625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>896</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
       "      <td>female</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3101298</td>\n",
       "      <td>12.2875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0          892         0       3   \n",
       "1          893         1       3   \n",
       "2          894         0       2   \n",
       "3          895         0       3   \n",
       "4          896         1       3   \n",
       "\n",
       "                                           Name     Sex   Age  SibSp  Parch  \\\n",
       "0                              Kelly, Mr. James    male  34.5      0      0   \n",
       "1              Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n",
       "2                     Myles, Mr. Thomas Francis    male  62.0      0      0   \n",
       "3                              Wirz, Mr. Albert    male  27.0      0      0   \n",
       "4  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n",
       "\n",
       "    Ticket     Fare Cabin Embarked  \n",
       "0   330911   7.8292   NaN        Q  \n",
       "1   363272   7.0000   NaN        S  \n",
       "2   240276   9.6875   NaN        Q  \n",
       "3   315154   8.6625   NaN        S  \n",
       "4  3101298  12.2875   NaN        S  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a5ad9b0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:38.331468Z",
     "iopub.status.busy": "2024-07-04T06:51:38.331043Z",
     "iopub.status.idle": "2024-07-04T06:51:38.361257Z",
     "shell.execute_reply": "2024-07-04T06:51:38.360044Z"
    },
    "papermill": {
     "duration": 0.042372,
     "end_time": "2024-07-04T06:51:38.364237",
     "exception": false,
     "start_time": "2024-07-04T06:51:38.321865",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>418.000000</td>\n",
       "      <td>418.000000</td>\n",
       "      <td>418.000000</td>\n",
       "      <td>332.000000</td>\n",
       "      <td>418.000000</td>\n",
       "      <td>418.000000</td>\n",
       "      <td>417.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1100.500000</td>\n",
       "      <td>0.363636</td>\n",
       "      <td>2.265550</td>\n",
       "      <td>30.272590</td>\n",
       "      <td>0.447368</td>\n",
       "      <td>0.392344</td>\n",
       "      <td>35.627188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>120.810458</td>\n",
       "      <td>0.481622</td>\n",
       "      <td>0.841838</td>\n",
       "      <td>14.181209</td>\n",
       "      <td>0.896760</td>\n",
       "      <td>0.981429</td>\n",
       "      <td>55.907576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>892.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.170000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>996.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.895800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1100.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1204.750000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1309.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   418.000000  418.000000  418.000000  332.000000  418.000000   \n",
       "mean   1100.500000    0.363636    2.265550   30.272590    0.447368   \n",
       "std     120.810458    0.481622    0.841838   14.181209    0.896760   \n",
       "min     892.000000    0.000000    1.000000    0.170000    0.000000   \n",
       "25%     996.250000    0.000000    1.000000   21.000000    0.000000   \n",
       "50%    1100.500000    0.000000    3.000000   27.000000    0.000000   \n",
       "75%    1204.750000    1.000000    3.000000   39.000000    1.000000   \n",
       "max    1309.000000    1.000000    3.000000   76.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  418.000000  417.000000  \n",
       "mean     0.392344   35.627188  \n",
       "std      0.981429   55.907576  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.895800  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.500000  \n",
       "max      9.000000  512.329200  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5f2b05ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:38.381783Z",
     "iopub.status.busy": "2024-07-04T06:51:38.381372Z",
     "iopub.status.idle": "2024-07-04T06:51:38.694043Z",
     "shell.execute_reply": "2024-07-04T06:51:38.692943Z"
    },
    "papermill": {
     "duration": 0.323013,
     "end_time": "2024-07-04T06:51:38.696491",
     "exception": false,
     "start_time": "2024-07-04T06:51:38.373478",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(titanic[['Survived','PassengerId']]);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0b914142",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:38.710753Z",
     "iopub.status.busy": "2024-07-04T06:51:38.710338Z",
     "iopub.status.idle": "2024-07-04T06:51:38.895387Z",
     "shell.execute_reply": "2024-07-04T06:51:38.894185Z"
    },
    "papermill": {
     "duration": 0.195103,
     "end_time": "2024-07-04T06:51:38.897867",
     "exception": false,
     "start_time": "2024-07-04T06:51:38.702764",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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zatqj4mOkCeeeKI8/vjj5R//+Ef585//XObNm1cWLFhQjh8/Xkop5c477yxTpkwpv/vd78rzzz9frr/++nLxxReXI0eOVI5xzTXXlCuuuKJs2LChrF+/vsyePbssW7asVpc0qvT395eurq7S1dVVIqL86Ec/Kl1dXZWn0jPm09vbW6ZPn14+//nPlxdeeKE8/PDDZcKECeXnP/951a+33r3bvF577bXS1dVV/vCHP5SIKA8//HDp6uoq+/fvrxzja1/7Wpk1a1Z56qmnyqZNm0pHR0fp6OiobD9x4kT58Ic/XBYtWlS2bt1annjiifL+97+/rFq1qurXW+9ONa/jx4+XpUuXlpkzZ5atW7eW/fv3V/68+W8MuL+q51TzOnjwYFm1alXp7Owse/bsKZs2bSo333xzaWpqKi+88ELlGPUwr7oPi9/85jflkksuKWPHji2tra3llltuKb29vZXtg4OD5dZbby3Tp08vTU1N5dOf/nTZuXPnsGO89tprZdmyZWXSpEmlpaWl3HzzzaW/v7/alzIqPf300yUi3vLnpptuKqXkzeevf/1rueqqq0pTU1O54IILyp133lmtSxxV3m1ev/jFL952++233145xpEjR8rXv/71MnXq1DJhwoRyww03DAuPUkrZs2dPWbJkSRk/fnw577zzyre//e0yMDBQxSsdHU41r6G/Evx2f55++unKMdxf1XOqeR05cqTccMMNpa2trYwdO7bMmDGjLF26tGzcuHHYMephXr42HQBIM2qesQAAak9YAABphAUAkEZYAABphAUAkEZYAABphAUAkEZYAABphAUAkEZYAABphAUAkEZYAABp/g/znUsGNwEMXQAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.boxplot(titanic['PassengerId'],vert=False);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ccd9f9bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:38.912712Z",
     "iopub.status.busy": "2024-07-04T06:51:38.912289Z",
     "iopub.status.idle": "2024-07-04T06:51:39.102304Z",
     "shell.execute_reply": "2024-07-04T06:51:39.101102Z"
    },
    "papermill": {
     "duration": 0.200828,
     "end_time": "2024-07-04T06:51:39.105115",
     "exception": false,
     "start_time": "2024-07-04T06:51:38.904287",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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2bPj1VdfjZ6enipPDQBM0dt9/PbiTQAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgzcyqT1hKiYiI0dHRqk8NAEzRicftE4/jp1J5WIyNjUVERF9fX9WnBgD+RWNjYzF79uxT/nlHeav0SDY+Ph779u2Ler0eHR0daV93dHQ0+vr6Yu/evdHT05P2dZnMnqtj19Ww52rYczWauedSSoyNjUVvb290dp76lRSVP2PR2dkZZ599dtO+fk9PjzttBey5OnZdDXuuhj1Xo1l7/mfPVJzgxZsAQBphAQCkmTZhUavVor+/P2q1WqtHmdbsuTp2XQ17roY9V+PfYc+Vv3gTAJi+ps0zFgBA6wkLACCNsAAA0ggLACBNW4XFpk2b4pxzzonu7u5YunRpPPPMM//0+J/85Cdx/vnnR3d3d1x00UWxdevWiiZtb43s+f7774/ly5fHmWeeGWeeeWasWLHiLf+78HeN3p9PGBgYiI6OjrjuuuuaO+A00uiu//a3v8XatWtj4cKFUavV4rzzzvP3x9vQ6J6/+c1vxnvf+96YNWtW9PX1xe233x6vv/56RdO2p8cffzxWrVoVvb290dHREQ8//PBb3mb79u1x8cUXR61Wi/e85z2xefPm5g5Z2sTAwEDp6uoqP/jBD8of/vCH8qlPfarMmTOn7N+//6THP/nkk2XGjBnlnnvuKTt27Chf/vKXyxlnnFGef/75iidvL43u+cYbbyybNm0qg4ODZXh4uHziE58os2fPLn/+858rnry9NLrnE3bv3l3e+c53luXLl5ePf/zj1Qzb5hrd9eHDh8ull15arr322vLEE0+U3bt3l+3bt5ehoaGKJ28vje75gQceKLVarTzwwANl9+7d5Ze//GVZuHBhuf322yuevL1s3bq1rF+/vjz00EMlIsqWLVv+6fG7du0q73jHO8q6devKjh07yn333VdmzJhRHn300abN2DZhcdlll5W1a9dOfH78+PHS29tb7r777pMef/3115ePfvSjk65bunRp+fSnP93UOdtdo3t+o2PHjpV6vV5+9KMfNWvEaWEqez527Fi5/PLLy/e+972yZs0aYfE2Nbrrb3/722Xx4sXlyJEjVY04LTS657Vr15aPfOQjk65bt25dueKKK5o653TydsLi85//fLnwwgsnXXfDDTeUlStXNm2utvhRyJEjR+LZZ5+NFStWTFzX2dkZK1asiKeeeuqkt3nqqacmHR8RsXLlylMez9T2/EYHDx6Mo0ePxty5c5s1Ztub6p6/9rWvxbx58+KWW26pYsxpYSq7/tnPfhbLli2LtWvXxvz58+N973tf3HXXXXH8+PGqxm47U9nz5ZdfHs8+++zEj0t27doVW7dujWuvvbaSmU8XrXgsrPxNyKbilVdeiePHj8f8+fMnXT9//vx44YUXTnqbkZGRkx4/MjLStDnb3VT2/EZf+MIXore39013ZP7fVPb8xBNPxPe///0YGhqqYMLpYyq73rVrV/z2t7+Nm266KbZu3Ro7d+6M2267LY4ePRr9/f1VjN12prLnG2+8MV555ZW48soro5QSx44di8985jPxpS99qYqRTxuneiwcHR2NQ4cOxaxZs9LP2RbPWNAeNm7cGAMDA7Fly5bo7u5u9TjTxtjYWKxevTruv//+OOuss1o9zrQ3Pj4e8+bNi+9+97txySWXxA033BDr16+P73znO60ebVrZvn173HXXXfGtb30rnnvuuXjooYfikUceiQ0bNrR6NP5FbfGMxVlnnRUzZsyI/fv3T7p+//79sWDBgpPeZsGCBQ0dz9T2fMK9994bGzdujN/85jfx/ve/v5ljtr1G9/zHP/4x9uzZE6tWrZq4bnx8PCIiZs6cGS+++GIsWbKkuUO3qancpxcuXBhnnHFGzJgxY+K6Cy64IEZGRuLIkSPR1dXV1Jnb0VT2/JWvfCVWr14dn/zkJyMi4qKLLooDBw7ErbfeGuvXr4/OTv/uzXCqx8Kenp6mPFsR0SbPWHR1dcUll1wS27Ztm7hufHw8tm3bFsuWLTvpbZYtWzbp+IiIX//616c8nqntOSLinnvuiQ0bNsSjjz4al156aRWjtrVG93z++efH888/H0NDQxMfH/vYx+Lqq6+OoaGh6Ovrq3L8tjKV+/QVV1wRO3funIi3iIiXXnopFi5cKCpOYSp7Pnjw4Jvi4UTMFW9hlaYlj4VNe1losoGBgVKr1crmzZvLjh07yq233lrmzJlTRkZGSimlrF69utxxxx0Txz/55JNl5syZ5d577y3Dw8Olv7/fr5u+DY3ueePGjaWrq6v89Kc/LX/5y18mPsbGxlr1LbSFRvf8Rn4r5O1rdNcvv/xyqdfr5bOf/Wx58cUXy89//vMyb968cuedd7bqW2gLje65v7+/1Ov18uCDD5Zdu3aVX/3qV2XJkiXl+uuvb9W30BbGxsbK4OBgGRwcLBFRvvGNb5TBwcHypz/9qZRSyh133FFWr149cfyJXzf93Oc+V4aHh8umTZv8uuk/uu+++8qiRYtKV1dXueyyy8rTTz898WdXXXVVWbNmzaTjf/zjH5fzzjuvdHV1lQsvvLA88sgjFU/cnhrZ87ve9a4SEW/66O/vr37wNtPo/fkfCYvGNLrr3/3ud2Xp0qWlVquVxYsXl69//evl2LFjFU/dfhrZ89GjR8tXv/rVsmTJktLd3V36+vrKbbfdVv76179WP3gbeeyxx076d+6J3a5Zs6ZcddVVb7rNBz/4wdLV1VUWL15cfvjDHzZ1Rm+bDgCkaYvXWAAA7UFYAABphAUAkEZYAABphAUAkEZYAABphAUAkEZYAABphAUAkEZYAABphAUAkEZYAABp/g8oUDAxFKlEXQAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.boxplot(titanic['Survived'],vert=False);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1132c853",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:39.121313Z",
     "iopub.status.busy": "2024-07-04T06:51:39.120921Z",
     "iopub.status.idle": "2024-07-04T06:51:39.132829Z",
     "shell.execute_reply": "2024-07-04T06:51:39.131672Z"
    },
    "papermill": {
     "duration": 0.022829,
     "end_time": "2024-07-04T06:51:39.135193",
     "exception": false,
     "start_time": "2024-07-04T06:51:39.112364",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    418.000000\n",
       "mean       0.363636\n",
       "std        0.481622\n",
       "min        0.000000\n",
       "25%        0.000000\n",
       "50%        0.000000\n",
       "75%        1.000000\n",
       "max        1.000000\n",
       "Name: Survived, dtype: float64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic['Survived'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "65476e1a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:39.151195Z",
     "iopub.status.busy": "2024-07-04T06:51:39.150805Z",
     "iopub.status.idle": "2024-07-04T06:51:39.160224Z",
     "shell.execute_reply": "2024-07-04T06:51:39.159094Z"
    },
    "papermill": {
     "duration": 0.020423,
     "end_time": "2024-07-04T06:51:39.162514",
     "exception": false,
     "start_time": "2024-07-04T06:51:39.142091",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PassengerId      0\n",
       "Survived         0\n",
       "Pclass           0\n",
       "Name             0\n",
       "Sex              0\n",
       "Age             86\n",
       "SibSp            0\n",
       "Parch            0\n",
       "Ticket           0\n",
       "Fare             1\n",
       "Cabin          327\n",
       "Embarked         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c5a63d8e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:39.178111Z",
     "iopub.status.busy": "2024-07-04T06:51:39.177709Z",
     "iopub.status.idle": "2024-07-04T06:51:39.191075Z",
     "shell.execute_reply": "2024-07-04T06:51:39.189238Z"
    },
    "papermill": {
     "duration": 0.024408,
     "end_time": "2024-07-04T06:51:39.193838",
     "exception": false,
     "start_time": "2024-07-04T06:51:39.169430",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 418 entries, 0 to 417\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  418 non-null    int64  \n",
      " 1   Survived     418 non-null    int64  \n",
      " 2   Pclass       418 non-null    int64  \n",
      " 3   Name         418 non-null    object \n",
      " 4   Sex          418 non-null    object \n",
      " 5   Age          332 non-null    float64\n",
      " 6   SibSp        418 non-null    int64  \n",
      " 7   Parch        418 non-null    int64  \n",
      " 8   Ticket       418 non-null    object \n",
      " 9   Fare         417 non-null    float64\n",
      " 10  Cabin        91 non-null     object \n",
      " 11  Embarked     418 non-null    object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 39.3+ KB\n"
     ]
    }
   ],
   "source": [
    "titanic.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1a37f3bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:39.212108Z",
     "iopub.status.busy": "2024-07-04T06:51:39.211672Z",
     "iopub.status.idle": "2024-07-04T06:51:39.228276Z",
     "shell.execute_reply": "2024-07-04T06:51:39.227001Z"
    },
    "papermill": {
     "duration": 0.027527,
     "end_time": "2024-07-04T06:51:39.230835",
     "exception": false,
     "start_time": "2024-07-04T06:51:39.203308",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>892</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Kelly, Mr. James</td>\n",
       "      <td>male</td>\n",
       "      <td>34.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>330911</td>\n",
       "      <td>7.8292</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>893</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
       "      <td>female</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>363272</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>894</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Myles, Mr. Thomas Francis</td>\n",
       "      <td>male</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>240276</td>\n",
       "      <td>9.6875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>895</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Wirz, Mr. Albert</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>315154</td>\n",
       "      <td>8.6625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>896</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
       "      <td>female</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3101298</td>\n",
       "      <td>12.2875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0          892         0       3   \n",
       "1          893         1       3   \n",
       "2          894         0       2   \n",
       "3          895         0       3   \n",
       "4          896         1       3   \n",
       "\n",
       "                                           Name     Sex   Age  SibSp  Parch  \\\n",
       "0                              Kelly, Mr. James    male  34.5      0      0   \n",
       "1              Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n",
       "2                     Myles, Mr. Thomas Francis    male  62.0      0      0   \n",
       "3                              Wirz, Mr. Albert    male  27.0      0      0   \n",
       "4  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n",
       "\n",
       "    Ticket     Fare Cabin Embarked  \n",
       "0   330911   7.8292   NaN        Q  \n",
       "1   363272   7.0000   NaN        S  \n",
       "2   240276   9.6875   NaN        Q  \n",
       "3   315154   8.6625   NaN        S  \n",
       "4  3101298  12.2875   NaN        S  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6bcc5d98",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:39.247686Z",
     "iopub.status.busy": "2024-07-04T06:51:39.246640Z",
     "iopub.status.idle": "2024-07-04T06:51:41.183133Z",
     "shell.execute_reply": "2024-07-04T06:51:41.181979Z"
    },
    "papermill": {
     "duration": 1.947373,
     "end_time": "2024-07-04T06:51:41.185544",
     "exception": false,
     "start_time": "2024-07-04T06:51:39.238171",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.27.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"052df114-fda7-4ca9-80b6-f66a3e4682a5\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"052df114-fda7-4ca9-80b6-f66a3e4682a5\")) {                    Plotly.newPlot(                        \"052df114-fda7-4ca9-80b6-f66a3e4682a5\",                        [{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"label=%{label}\\u003cbr\\u003evalue=%{value}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"labels\":[3,1,2],\"legendgroup\":\"\",\"name\":\"\",\"showlegend\":true,\"values\":[218,107,93],\"type\":\"pie\",\"textinfo\":\"percent+label\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"legend\":{\"tracegroupgap\":0,\"title\":{\"text\":\"Categories:\"},\"orientation\":\"h\",\"yanchor\":\"bottom\",\"y\":0.2},\"title\":{\"text\":\"Distribution of Pclass\"}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('052df114-fda7-4ca9-80b6-f66a3e4682a5');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pclass_counts=titanic.Pclass.value_counts()\n",
    "\n",
    "fig_pclass_perc=px.pie(titanic,names=pclass_counts.index,values=pclass_counts.values,title=f'Distribution of Pclass')\n",
    "\n",
    "fig_pclass_perc.update_traces(textinfo='percent+label')\n",
    "fig_pclass_perc.update_layout(legend_title_text='Categories:',legend=dict(orientation=\"h\",yanchor=\"bottom\",y=0.2))\n",
    "fig_pclass_perc.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a2e22d0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:41.202300Z",
     "iopub.status.busy": "2024-07-04T06:51:41.201896Z",
     "iopub.status.idle": "2024-07-04T06:51:41.315679Z",
     "shell.execute_reply": "2024-07-04T06:51:41.314448Z"
    },
    "papermill": {
     "duration": 0.124855,
     "end_time": "2024-07-04T06:51:41.317992",
     "exception": false,
     "start_time": "2024-07-04T06:51:41.193137",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/plotly/express/_core.py:2065: FutureWarning:\n",
      "\n",
      "When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"8c6715eb-0d7d-4fa1-a8d2-4dbbd33fe071\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"8c6715eb-0d7d-4fa1-a8d2-4dbbd33fe071\")) {                    Plotly.newPlot(                        \"8c6715eb-0d7d-4fa1-a8d2-4dbbd33fe071\",                        [{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"hovertemplate\":\"Survived=0\\u003cbr\\u003eSex=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"0\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"0\",\"offsetgroup\":\"0\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\",\"male\"],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"},{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"hovertemplate\":\"Survived=1\\u003cbr\\u003eSex=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"1\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"1\",\"offsetgroup\":\"1\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\",\"female\"],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sex\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"legend\":{\"title\":{\"text\":\"Survived\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"group\",\"title\":{\"text\":\"Survival according to gender\"},\"plot_bgcolor\":\"lightblue\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('8c6715eb-0d7d-4fa1-a8d2-4dbbd33fe071');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig_pclass_surv=px.histogram(titanic,x='Sex',barmode='group',color='Survived')\n",
    "fig_pclass_surv.update_layout(title=\"Survival according to gender\",plot_bgcolor='lightblue')\n",
    "fig_pclass_surv.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "40a06898",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-04T06:51:41.335576Z",
     "iopub.status.busy": "2024-07-04T06:51:41.335166Z",
     "iopub.status.idle": "2024-07-04T06:51:41.402169Z",
     "shell.execute_reply": "2024-07-04T06:51:41.401076Z"
    },
    "papermill": {
     "duration": 0.079637,
     "end_time": "2024-07-04T06:51:41.405462",
     "exception": false,
     "start_time": "2024-07-04T06:51:41.325825",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/plotly/express/_core.py:2065: FutureWarning:\n",
      "\n",
      "When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"ae5e8739-7ddb-46fd-bc66-bde4f5808522\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ae5e8739-7ddb-46fd-bc66-bde4f5808522\")) {                    Plotly.newPlot(                        \"ae5e8739-7ddb-46fd-bc66-bde4f5808522\",                        [{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"hovertemplate\":\"Survived=0\\u003cbr\\u003ePclass=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"0\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"0\",\"offsetgroup\":\"0\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[3,2,3,3,2,3,3,1,2,2,3,1,3,1,3,3,1,3,2,2,1,3,3,3,3,1,3,3,1,3,1,2,2,3,3,3,3,3,2,3,1,1,1,3,1,1,3,2,3,1,1,3,2,3,2,3,3,1,3,3,3,2,3,3,3,3,3,3,2,2,3,3,1,3,3,3,3,2,3,3,1,3,3,3,3,2,3,1,2,1,3,1,3,1,2,3,3,3,3,1,3,3,2,1,3,3,3,3,3,3,1,2,1,3,2,3,2,2,1,3,2,2,3,1,2,3,1,2,1,2,3,3,3,2,1,1,3,3,3,3,3,2,2,3,3,1,3,1,3,1,3,3,1,2,3,1,3,3,3,3,3,3,3,3,2,3,1,3,3,1,3,3,2,2,2,2,3,3,3,1,3,3,1,3,1,3,3,3,1,3,3,2,2,3,1,3,1,3,3,3,1,2,3,2,3,3,2,1,3,1,2,2,1,3,3,1,2,3,2,3,2,3,3,3,2,2,2,2,2,1,3,3,3,3,3,2,2,1,2,2,1,3,3,3,2,3,2,3,3,1,3,2,3,3,3,3,2,1,1,2,2,1,3,3,3,3],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"},{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"hovertemplate\":\"Survived=1\\u003cbr\\u003ePclass=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"1\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"1\",\"offsetgroup\":\"1\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[3,3,3,3,1,1,2,3,3,1,1,1,3,3,3,3,2,1,1,3,2,1,1,3,2,3,1,3,3,1,1,3,3,3,3,3,1,1,3,1,3,3,1,3,1,3,2,2,1,3,3,3,3,3,1,1,3,1,3,3,3,2,3,1,3,2,2,2,1,1,1,2,3,3,3,3,2,3,1,2,3,3,1,2,2,1,3,3,1,2,1,1,2,2,2,3,2,2,2,3,3,1,3,2,3,3,3,3,3,2,3,1,3,3,1,3,1,2,2,3,1,3,3,2,1,3,1,3,2,2,1,3,3,1,1,1,1,3,3,3,2,1,1,1,1,1,3,3,3,1,3,1],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Pclass\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"legend\":{\"title\":{\"text\":\"Survived\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"group\",\"title\":{\"text\":\"Survival according to passenger classes\"},\"plot_bgcolor\":\"pink\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('ae5e8739-7ddb-46fd-bc66-bde4f5808522');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig_pclass_surv=px.histogram(titanic,x='Pclass',barmode='group',color='Survived')\n",
    "fig_pclass_surv.update_layout(title=\"Survival according to passenger classes\",plot_bgcolor='pink')\n",
    "fig_pclass_surv.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 826163,
     "sourceId": 2879186,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.401956,
   "end_time": "2024-07-04T06:51:42.239688",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-04T06:51:31.837732",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
